package com.prodcutservice.service.impl;

import java.util.Arrays;
import java.util.List;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.Productservice.dto.ProductDTO;
import com.Productservice.entity.Product;
import com.Productservice.payloads.ApiResponse;
import com.Productservice.repository.ProductRepository;
import com.Productservice.service.ProductService;

@Service
public class ProductServiceImpl implements ProductService {

	@Autowired
	private ProductRepository ProductRepository;

	@Autowired
	private ModelMapper modelMapper;

	@Override
	public ApiResponse createProduct(ProductDTO ProductDTO) {
		Product Product = modelMapper.map(ProductDTO, Product.class);
		Product = ProductRepository.save(Product);
		return ApiResponse.builder().data(modelMapper.map(Product, ProductDTO.class)).message("Product Created Successfully!")
				.build();
	}

	@Override
	public ApiResponse getProductById(Integer id) {
		Product Product = ProductRepository.findById(id)
				.orElseThrow(() -> new RuntimeException("Product does not exist with id : " + id));
		return ApiResponse.builder()
				.data(modelMapper.map(Product, ProductDTO.class))
				.message("Product with id "+id)
				.build();
	}

	@Override
	public ApiResponse getAllProduct() {
		List<Product> Products = ProductRepository.findAll();
		 List<ProductDTO> ProductDtos = Arrays.asList(modelMapper.map(Products, ProductDTO[].class));
		 return ApiResponse.builder()
				 	.data(ProductDtos)
				 	.message("All Products")
				 	.build();
	}

}
