package com.orderservice.service.impl;
import java.util.Arrays;
import java.util.List;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.orderservice.dto.OrderDTO;
import com.orderservice.entity.Order;
import com.orderservice.repository.OrderRepository;
import com.orderservice.service.OrderService;
import com.prodcutservice.payloads.ApiResponse;

@Service
public class OrderServiceImpl implements OrderService {

	@Autowired
	private OrderRepository orderRepository;

	@Autowired
	private ModelMapper modelMapper;

	@Override
	public ApiResponse createOrder(OrderDTO OrderDTO) {
		Order Order = modelMapper.map(OrderDTO, Order.class);
		Order = orderRepository.save(Order);
		return ApiResponse.builder().data(modelMapper.map(Order, OrderDTO.class)).message("Order Created Successfully!")
				.build();
	}

	@Override
	public ApiResponse getOrderById(String id) {
		Order Order = orderRepository.findById(id)
				.orElseThrow(() -> new RuntimeException("Order does not exist with id : " + id));
		return ApiResponse.builder()
				.data(modelMapper.map(Order, OrderDTO.class))
				.message("Order with id "+id)
				.build();
	}

	@Override
	public ApiResponse getAllOrder() {
		List<Order> Orders = orderRepository.findAll();
		 List<OrderDTO> OrderDtos = Arrays.asList(modelMapper.map(Orders, OrderDTO[].class));
		 return ApiResponse.builder()
				 	.data(OrderDtos)
				 	.message("All Orders")
				 	.build();
	}

	@Override
	public ApiResponse getAllOrderOfUser(Integer id) {
		List<Order> orders = orderRepository.findByUserId(id);
		return ApiResponse.builder()
					.data(orders)
					.message("All orders with user id "+orders)
	}

}
